plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'Toon'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:8.0.33'
    // runtimeonly 'mysql:mysql-connector-java'
    implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

     // H2 Database (예제용으로 사용)
    runtimeOnly 'com.h2database:h2'
    // 이메일 인증 
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    //ckeditor 태그제거
    implementation 'org.jsoup:jsoup:1.14.3' // 현재 버전 확인하여 업데이트 가능
    // 업로드 관련
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'commons-fileupload:commons-fileupload:1.4'
    implementation 'org.apache.commons:commons-lang3:3.0'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
    options.encoding = 'UTF-8'
}

bootJar {
    loaderImplementation = org.springframework.boot.loader.tools.LoaderImplementation.CLASSIC
}
